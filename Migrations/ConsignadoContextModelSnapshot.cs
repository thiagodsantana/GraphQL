// <auto-generated />
using ConsignadoGraphQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsignadoGraphQL.Migrations
{
    [DbContext(typeof(ConsignadoContext))]
    partial class ConsignadoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsignadoGraphQL.Models.Beneficiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Beneficiarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "12345678901",
                            Nome = "João Silva"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "10987654321",
                            Nome = "Maria Oliveira"
                        });
                });

            modelBuilder.Entity("ConsignadoGraphQL.Models.Beneficio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeneficiarioId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiarioId");

                    b.ToTable("Beneficios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeneficiarioId = 1,
                            Tipo = "Aposentadoria",
                            Valor = 1200.00m
                        },
                        new
                        {
                            Id = 2,
                            BeneficiarioId = 2,
                            Tipo = "Pensão",
                            Valor = 800.00m
                        });
                });

            modelBuilder.Entity("ConsignadoGraphQL.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeneficioId")
                        .HasColumnType("int");

                    b.Property<int>("Parcelas")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxaJuros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BeneficioId");

                    b.ToTable("Contratos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeneficioId = 1,
                            Parcelas = 24,
                            TaxaJuros = 1.5m,
                            ValorTotal = 24000.00m
                        },
                        new
                        {
                            Id = 2,
                            BeneficioId = 2,
                            Parcelas = 12,
                            TaxaJuros = 2.0m,
                            ValorTotal = 9600.00m
                        });
                });

            modelBuilder.Entity("ConsignadoGraphQL.Models.Beneficio", b =>
                {
                    b.HasOne("ConsignadoGraphQL.Models.Beneficiario", "Beneficiario")
                        .WithMany("Beneficios")
                        .HasForeignKey("BeneficiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiario");
                });

            modelBuilder.Entity("ConsignadoGraphQL.Models.Contrato", b =>
                {
                    b.HasOne("ConsignadoGraphQL.Models.Beneficio", "Beneficio")
                        .WithMany("Contratos")
                        .HasForeignKey("BeneficioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficio");
                });

            modelBuilder.Entity("ConsignadoGraphQL.Models.Beneficiario", b =>
                {
                    b.Navigation("Beneficios");
                });

            modelBuilder.Entity("ConsignadoGraphQL.Models.Beneficio", b =>
                {
                    b.Navigation("Contratos");
                });
#pragma warning restore 612, 618
        }
    }
}
